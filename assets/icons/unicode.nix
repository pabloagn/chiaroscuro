# assets/icons/unicode.nix
# Standard Unicode character definitions for NixOS with code points

{
  unicode = {
    # Arrows
    arrows = {
      right = { char = "‚Üí"; code = "U+2192"; };
      left = { char = "‚Üê"; code = "U+2190"; };
      up = { char = "‚Üë"; code = "U+2191"; };
      down = { char = "‚Üì"; code = "U+2193"; };
      upRight = { char = "‚Üó"; code = "U+2197"; };
      upLeft = { char = "‚Üñ"; code = "U+2196"; };
      downRight = { char = "‚Üò"; code = "U+2198"; };
      downLeft = { char = "‚Üô"; code = "U+2199"; };
      rightDouble = { char = "‚áí"; code = "U+21D2"; };
      leftDouble = { char = "‚áê"; code = "U+21D0"; };
      upDown = { char = "‚Üï"; code = "U+2195"; };
      leftRight = { char = "‚Üî"; code = "U+2194"; };
      rightThick = { char = "‚ûî"; code = "U+2794"; };
      rightLong = { char = "‚ü∂"; code = "U+27F6"; };
      leftLong = { char = "‚üµ"; code = "U+27F5"; };
      rightHook = { char = "‚Ü™"; code = "U+21AA"; };
      leftHook = { char = "‚Ü©"; code = "U+21A9"; };
      rightTail = { char = "‚§ë"; code = "U+2911"; };
      leftTail = { char = "‚¨∏"; code = "U+2B38"; };
      rightDashed = { char = "‚á¢"; code = "U+21E2"; };
      leftDashed = { char = "‚á†"; code = "U+21E0"; };
    };

    # Math
    math = {
      plus = { char = "+"; code = "U+002B"; };
      minus = { char = "‚àí"; code = "U+2212"; };
      multiply = { char = "√ó"; code = "U+00D7"; };
      divide = { char = "√∑"; code = "U+00F7"; };
      equal = { char = "="; code = "U+003D"; };
      notEqual = { char = "‚â†"; code = "U+2260"; };
      approx = { char = "‚âà"; code = "U+2248"; };
      infinity = { char = "‚àû"; code = "U+221E"; };
      sum = { char = "‚àë"; code = "U+2211"; };
      product = { char = "‚àè"; code = "U+220F"; };
      integral = { char = "‚à´"; code = "U+222B"; };
      doubleIntegral = { char = "‚à¨"; code = "U+222C"; };
      tripleIntegral = { char = "‚à≠"; code = "U+222D"; };
      contourIntegral = { char = "‚àÆ"; code = "U+222E"; };
      squareRoot = { char = "‚àö"; code = "U+221A"; };
      cubeRoot = { char = "‚àõ"; code = "U+221B"; };
      fourthRoot = { char = "‚àú"; code = "U+221C"; };
      plusMinus = { char = "¬±"; code = "U+00B1"; };
      minusPlus = { char = "‚àì"; code = "U+2213"; };
      lessThan = { char = "<"; code = "U+003C"; };
      greaterThan = { char = ">"; code = "U+003E"; };
      lessThanEqual = { char = "‚â§"; code = "U+2264"; };
      greaterThanEqual = { char = "‚â•"; code = "U+2265"; };
      muchLessThan = { char = "‚â™"; code = "U+226A"; };
      muchGreaterThan = { char = "‚â´"; code = "U+226B"; };
      subset = { char = "‚äÇ"; code = "U+2282"; };
      superset = { char = "‚äÉ"; code = "U+2283"; };
      subsetEqual = { char = "‚äÜ"; code = "U+2286"; };
      supersetEqual = { char = "‚äá"; code = "U+2287"; };
      intersection = { char = "‚à©"; code = "U+2229"; };
      union = { char = "‚à™"; code = "U+222A"; };
      elementOf = { char = "‚àà"; code = "U+2208"; };
      notElementOf = { char = "‚àâ"; code = "U+2209"; };
      forAll = { char = "‚àÄ"; code = "U+2200"; };
      thereExists = { char = "‚àÉ"; code = "U+2203"; };
      thereNotExists = { char = "‚àÑ"; code = "U+2204"; };
      degree = { char = "¬∞"; code = "U+00B0"; };
      partial = { char = "‚àÇ"; code = "U+2202"; };
      gradient = { char = "‚àá"; code = "U+2207"; };
      proportional = { char = "‚àù"; code = "U+221D"; };
      infty = { char = "‚àû"; code = "U+221E"; };
      prime = { char = "‚Ä≤"; code = "U+2032"; };
      doublePrime = { char = "‚Ä≥"; code = "U+2033"; };
      triplePrime = { char = "‚Ä¥"; code = "U+2034"; };
      empty = { char = "‚àÖ"; code = "U+2205"; };
      aplUpCaret = { char = "‚éâ"; code = "U+2389"; };
      lambda = { char = "Œª"; code = "U+03BB"; };
    };

    # Checkboxes and status indicators
    status = {
      check = { char = "‚úì"; code = "U+2713"; };
      heavyCheck = { char = "‚úî"; code = "U+2714"; };
      cross = { char = "‚úó"; code = "U+2717"; };
      heavyCross = { char = "‚úò"; code = "U+2718"; };
      ballot = { char = "‚òê"; code = "U+2610"; };
      ballotCheck = { char = "‚òë"; code = "U+2611"; };
      ballotCross = { char = "‚òí"; code = "U+2612"; };
      radioEmpty = { char = "‚óã"; code = "U+25CB"; };
      radioFull = { char = "‚óè"; code = "U+25CF"; };
      warning = { char = "‚ö†"; code = "U+26A0"; };
      info = { char = "‚Ñπ"; code = "U+2139"; };
      question = { char = "?"; code = "U+003F"; };
      exclamation = { char = "!"; code = "U+0021"; };
      questionMark = { char = "‚ùì"; code = "U+2753"; };
      exclamationMark = { char = "‚ùó"; code = "U+2757"; };
      success = { char = "‚úÖ"; code = "U+2705"; };
      failure = { char = "‚ùå"; code = "U+274C"; };
    };

    # Weather and nature
    weather = {
      sun = { char = "‚òÄ"; code = "U+2600"; };
      cloud = { char = "‚òÅ"; code = "U+2601"; };
      umbrella = { char = "‚òÇ"; code = "U+2602"; };
      snowflake = { char = "‚ùÑ"; code = "U+2744"; };
      comet = { char = "‚òÑ"; code = "U+2604"; };
      star = { char = "‚òÖ"; code = "U+2605"; };
      emptyStar = { char = "‚òÜ"; code = "U+2606"; };
      flower = { char = "‚ùÄ"; code = "U+2740"; };
      fourLeafClover = { char = "üçÄ"; code = "U+1F340"; };
      snowman = { char = "‚òÉ"; code = "U+2603"; };
    };

    # Technology and UI
    tech = {
      power = { char = "‚èª"; code = "U+23FB"; };
      eject = { char = "‚èè"; code = "U+23CF"; };
      keyboard = { char = "‚å®"; code = "U+2328"; };
      command = { char = "‚åò"; code = "U+2318"; };
      option = { char = "‚å•"; code = "U+2325"; };
      delete = { char = "‚å´"; code = "U+232B"; };
      return = { char = "‚èé"; code = "U+23CE"; };
      escape = { char = "‚éã"; code = "U+238B"; };
      play = { char = "‚ñ∂"; code = "U+25B6"; };
      pause = { char = "‚è∏"; code = "U+23F8"; };
      stop = { char = "‚èπ"; code = "U+23F9"; };
      record = { char = "‚è∫"; code = "U+23FA"; };
      skipForward = { char = "‚è≠"; code = "U+23ED"; };
      skipBack = { char = "‚èÆ"; code = "U+23EE"; };
      enter = { char = "‚å§"; code = "U+2324"; };
      home = { char = "‚åÇ"; code = "U+2302"; };
      shift = { char = "‚áß"; code = "U+21E7"; };
      tab = { char = "‚á•"; code = "U+21E5"; };
      capsLock = { char = "‚á™"; code = "U+21EA"; };
      mute = { char = "üîá"; code = "U+1F507"; };
      volumeDown = { char = "üîâ"; code = "U+1F509"; };
      volumeUp = { char = "üîä"; code = "U+1F50A"; };
      settings = { char = "‚öô"; code = "U+2699"; };
    };

    # Currency
    currency = {
      dollar = { char = "$"; code = "U+0024"; };
      euro = { char = "‚Ç¨"; code = "U+20AC"; };
      pound = { char = "¬£"; code = "U+00A3"; };
      yen = { char = "¬•"; code = "U+00A5"; };
      bitcoin = { char = "‚Çø"; code = "U+20BF"; };
      cent = { char = "¬¢"; code = "U+00A2"; };
      currency = { char = "¬§"; code = "U+00A4"; };
      rupee = { char = "‚Çπ"; code = "U+20B9"; };
      won = { char = "‚Ç©"; code = "U+20A9"; };
      franc = { char = "‚Ç£"; code = "U+20A3"; };
      lira = { char = "‚Ç§"; code = "U+20A4"; };
      peso = { char = "‚Ç±"; code = "U+20B1"; };
    };

    # Punctuation and typography
    typography = {
      bullet = { char = "‚Ä¢"; code = "U+2022"; };
      triangleBullet = { char = "‚Ä£"; code = "U+2023"; };
      interpunct = { char = "¬∑"; code = "U+00B7"; };
      ellipsis = { char = "‚Ä¶"; code = "U+2026"; };
      quote = { char = "¬´¬ª"; code = "U+00AB U+00BB"; };
      quoteLeft = { char = "¬´"; code = "U+00AB"; };
      quoteRight = { char = "¬ª"; code = "U+00BB"; };
      dash = { char = "‚Äî"; code = "U+2014"; };
      ndash = { char = "‚Äì"; code = "U+2013"; };
      copyright = { char = "¬©"; code = "U+00A9"; };
      registered = { char = "¬Æ"; code = "U+00AE"; };
      trademark = { char = "‚Ñ¢"; code = "U+2122"; };
      paragraph = { char = "¬∂"; code = "U+00B6"; };
      section = { char = "¬ß"; code = "U+00A7"; };
      dagger = { char = "‚Ä†"; code = "U+2020"; };
      doubleDagger = { char = "‚Ä°"; code = "U+2021"; };
    };

    # Brackets and separators
    brackets = {
      leftParenthesis = { char = "("; code = "U+0028"; };
      rightParenthesis = { char = ")"; code = "U+0029"; };
      leftBracket = { char = "["; code = "U+005B"; };
      rightBracket = { char = "]"; code = "U+005D"; };
      leftBrace = { char = "{"; code = "U+007B"; };
      rightBrace = { char = "}"; code = "U+007D"; };
      leftAngle = { char = "‚ü®"; code = "U+27E8"; };
      rightAngle = { char = "‚ü©"; code = "U+27E9"; };
      leftDoubleAngle = { char = "„Ää"; code = "U+300A"; };
      rightDoubleAngle = { char = "„Äã"; code = "U+300B"; };
      vertical = { char = "|"; code = "U+007C"; };
      doubleVertical = { char = "‚Äñ"; code = "U+2016"; };
      leftChevron = { char = "‚Äπ"; code = "U+2039"; };
      rightChevron = { char = "‚Ä∫"; code = "U+203A"; };
      leftGuillemet = { char = "¬´"; code = "U+00AB"; };
      rightGuillemet = { char = "¬ª"; code = "U+00BB"; };
      dot = { char = "."; code = "U+002E"; };
      verticalLine = { char = "‚îÇ"; code = "U+2502"; };
      doubleVerticalLine = { char = "‚ïë"; code = "U+2551"; };
      topHeader = { char = "‚ï¶"; code = "U+2566"; };
      doubleTop = { char = "‚ï§"; code = "U+2564"; };
      topRight = { char = "‚îê"; code = "U+2510"; };
      topLeft = { char = "‚îå"; code = "U+250C"; };
      bottomRight = { char = "‚îò"; code = "U+2518"; };
      bottomLeft = { char = "‚îî"; code = "U+2514"; };
      teeRight = { char = "‚îú"; code = "U+251C"; };
      teeLeft = { char = "‚î§"; code = "U+2524"; };
      teeUp = { char = "‚î¥"; code = "U+2534"; };
      teeDown = { char = "‚î¨"; code = "U+252C"; };
      cross = { char = "‚îº"; code = "U+253C"; };
      horizontalLine = { char = "‚îÄ"; code = "U+2500"; };
      doubleHorizontalLine = { char = "‚ïê"; code = "U+2550"; };
    };

    # Loading indicators and progress
    loading = {
      shade1 = { char = "‚ñë"; code = "U+2591"; };
      shade2 = { char = "‚ñí"; code = "U+2592"; };
      shade3 = { char = "‚ñì"; code = "U+2593"; };
      block = { char = "‚ñà"; code = "U+2588"; };
      leftSevenEighths = { char = "‚ñâ"; code = "U+2589"; };
      leftThreeQuarters = { char = "‚ñå"; code = "U+258C"; };
      leftHalf = { char = "‚ñê"; code = "U+258C"; };
      leftQuarter = { char = "‚ñé"; code = "U+258E"; };
      leftEighth = { char = "‚ñè"; code = "U+258F"; };
      spinnerSlash = { char = "‚ÅÑ"; code = "U+2044"; };
      spinnerBackslash = { char = "\\"; code = "U+005C"; };
      spinnerVertical = { char = "‚îÇ"; code = "U+2502"; };
      spinnerHorizontal = { char = "‚îÄ"; code = "U+2500"; };
      spinnerPlus = { char = "+"; code = "U+002B"; };
      spinnerX = { char = "√ó"; code = "U+00D7"; };
    };

    # React and UI components
    react = {
      collapse = { char = "‚ñº"; code = "U+25BC"; };
      expand = { char = "‚ñ∂"; code = "U+25B6"; };
      hamburger = { char = "‚ò∞"; code = "U+2630"; };
      kebab = { char = "‚ãÆ"; code = "U+22EE"; };
      meatball = { char = "‚ãØ"; code = "U+22EF"; };
      refresh = { char = "‚Üª"; code = "U+21BB"; };
      settings = { char = "‚öô"; code = "U+2699"; };
      chevronLeft = { char = "‚ùÆ"; code = "U+276E"; };
      chevronRight = { char = "‚ùØ"; code = "U+276F"; };
      chevronUp = { char = "‚ñ≤"; code = "U+25B2"; };
      chevronDown = { char = "‚ñº"; code = "U+25BC"; };
      caretUp = { char = "‚ñ¥"; code = "U+25B4"; };
      caretDown = { char = "‚ñæ"; code = "U+25BE"; };
      caretLeft = { char = "‚óÇ"; code = "U+25C2"; };
      caretRight = { char = "‚ñ∏"; code = "U+25B8"; };
      singleLeft = { char = "‚ùÆ"; code = "U+276E"; }; # Duplicate, keeping for original key consistency
      singleRight = { char = "‚ùØ"; code = "U+276F"; }; # Duplicate, keeping for original key consistency
      doubleLeft = { char = "¬´"; code = "U+00AB"; }; # Duplicate, keeping for original key consistency
      doubleRight = { char = "¬ª"; code = "U+00BB"; }; # Duplicate, keeping for original key consistency
      star = { char = "‚òÖ"; code = "U+2605"; }; # Duplicate, keeping for original key consistency
      emptyStar = { char = "‚òÜ"; code = "U+2606"; }; # Duplicate, keeping for original key consistency
      halfStar = { char = "‚òÖ‚òÜ"; code = "U+2605 U+2606"; };
      heart = { char = "‚ô•"; code = "U+2665"; };
      emptyHeart = { char = "‚ô°"; code = "U+2661"; };
      user = { char = "üë§"; code = "U+1F464"; };
      search = { char = "üîç"; code = "U+1F50D"; };
      external = { char = "‚¨Ä"; code = "U+2B00"; };
      home = { char = "‚åÇ"; code = "U+2302"; }; # Duplicate, keeping for original key consistency
    };

    # Programming Languages (Only standard Unicode symbols relevant to programming)
    programming = {
      nushellArrow = { char = ">"; code = "U+003E"; }; # GREATER-THAN SIGN for nushell
    };

    # File System and Generic File Icons
    files = {}; # No standard Unicode characters added from yazi config here

    # OS and Environment Configurations
    osAndEnvironments = {}; # No standard Unicode characters added from yazi config here

    # Build Tools
    buildTools = {}; # No standard Unicode characters added from yazi config here

    # Source Control
    sourceControl = {}; # No standard Unicode characters added from yazi config here

    # Editors & IDEs
    editors = {}; # No standard Unicode characters added from yazi config here

    # CAD and 3D Modeling
    cadAnd3d = {}; # No standard Unicode characters added from yazi config here

    # Design and Media
    designAndMedia = {}; # No standard Unicode characters added from yazi config here

    # Documents and Ebooks
    documents = {}; # No standard Unicode characters added from yazi config here

    # Web Development and Frontend
    web = {}; # No standard Unicode characters added from yazi config here

    # Security related Icons
    security = {}; # No standard Unicode characters added from yazi config here

    # Miscellaneous Icons
    misc = {}; # No standard Unicode characters added from yazi config here
  };
}
